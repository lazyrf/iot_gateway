PHONY := __build
__build:


obj-y :=
subdir-y :=
EXTRA_CFLAGS :=

include Makefile

cur_dir :=
folder_name = $(notdir $(shell pwd))

ifneq ($(folder_name),$(PROJ_NAME))
cur_dir := $(shell pwd | sed "s/.*$(PROJ_NAME)\///")
endif

# obj-y := a.o b.o c/ d/
# $(filter %/, $(obj-y))   : c/ d/
# __subdir-y  : c d
# subdir-y    : c d
__subdir-y	:= $(patsubst %/,%,$(filter %/, $(obj-y)))
subdir-y	+= $(__subdir-y)

# c/built-in.o d/built-in.o
subdir_objs := $(foreach f,$(subdir-y),$(OUTDIR)/$(cur_dir)/$(f)/built-in.o)

# a.o b.o
cur_objs := $(addprefix $(OUTDIR)/$(cur_dir)/,$(filter-out %/, $(obj-y)))
dep_files := $(cur_objs:%.o=%.d)
dep_files := $(wildcard $(dep_files))

ifneq ($(dep_files),)
  include $(dep_files)
endif


PHONY += $(subdir-y)


__build : $(subdir-y) $(OUTDIR)/$(cur_dir)/built-in.o

$(subdir-y):
	make -C $@ -f $(TOPDIR)/Makefile.build

$(OUTDIR)/$(cur_dir)/built-in.o : $(cur_objs) $(subdir_objs)
	$(LD) -r -o $@ $^

dep_file = $(basename $@).d

$(OUTDIR)/$(cur_dir)/%.o : %.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) $(CFLAGS_$@) -Wp,-MD,$(dep_file) -c -o $@ $<

$(OUTDIR)/$(cur_dir)/%.o : %.s
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) $(CFLAGS_$@) -Wp,-MD,$(dep_file) -c -o $@ $<
.PHONY : $(PHONY)
